local M = require("scripts.manager")

local function generate_level_grid(self)
	local button_template = gui.get_node("level_button_template")
	local columns = 3
	local button_size = gui.get_size(button_template)
	local spacing = vmath.vector3(20, 20, 0) -- Espacio entre botones
	local start_x = 200
	local start_y = 500

	for i, level_data in ipairs(M["world_" .. M.current_world]) do
		local row = math.floor((i - 1) / columns)
		local col = (i - 1) % columns
		local pos_x = start_x + col * (button_size.x + spacing.x)
		local pos_y = start_y - row * (button_size.y + spacing.y)
		local position = vmath.vector3(pos_x, pos_y, 0)
		local new_button_nodes = gui.clone_tree(button_template)-- Clona el árbol de nodos de la plantilla (el botón y su texto hijo)
		local button_node = new_button_nodes[gui.get_id(button_template)]-- El nodo principal del botón
		gui.set_position(button_node, position)
		gui.set_enabled(button_node, true)
		local text_node_template = gui.get_node("level_number")-- El nodo de texto hijo
		local text_node = new_button_nodes[gui.get_id(text_node_template)]
		gui.set_text(text_node, tostring(level_data.l))
	
		local sprite_name
		if level_data.done then
			sprite_name = "level_done"
		elseif level_data.open then
			sprite_name = "level"
		else
			sprite_name = "level_blocked"
		end

		gui.play_flipbook(button_node, hash(sprite_name))

		table.insert(self.level_buttons, {
			node = button_node,
			level = level_data.l,
			open = level_data.open
		})
	end

	gui.set_enabled(button_template, false)-- Deshabilita la plantilla original para que no sea visible
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.level_buttons = {}
	generate_level_grid(self)
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		for i, button_data in ipairs(self.level_buttons) do
			if gui.pick_node(button_data.node, action.x, action.y) then
				if button_data.open then
					M.current_level = button_data.level
					msg.post("main:/main", "change_scene", { scene = M.SCENES.LEVEL })
					sound.play("main:/main#enter")
				else
					sound.play("main:/main#blocked")
				end
				return true
			end
		end
	end
	return false
end